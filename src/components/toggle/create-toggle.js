/**
 * ======================================================================
 * 🎚️ createToggle()
 * ----------------------------------------------------------------------
 * ✅ 역할:
 * - 토글 스위치(checkbox 기반)를 HTML 문자열 형태로 생성하는 유틸 함수
 * - 라벨, 크기, variant, 비활성화 여부, 초기 ON 상태를 옵션으로 제어
 * ----------------------------------------------------------------------
 * ⚙️ 주요 기능:
 * 1️⃣ id 미지정 시 랜덤 ID 자동 생성
 * 2️⃣ size(large/medium/small)에 따라 다른 클래스 적용
 * 3️⃣ label 유무에 따라 라벨 텍스트 표시/생략
 * 4️⃣ disabled, checked 속성 제어 가능
 * ----------------------------------------------------------------------
 * 🧩 Angular 변환 가이드:
 * - Angular에서는 `<app-toggle>` 컴포넌트로 변환 가능
 * - `@Input()`으로 size, label, disabled, checked 등 속성 전달
 * - `@Output()`으로 (change) 이벤트 바인딩
 * - 내부 구조: `<label>` + `<input type="checkbox">` + `<span>` 형태 유지
 * ----------------------------------------------------------------------
 * 📘 사용 예시:
 * container.innerHTML = createToggle({
 *   id: "dark-mode",
 *   size: "large",
 *   label: "다크 모드",
 *   checked: true,
 * });
 * ----------------------------------------------------------------------
 * 🪄 관련 SCSS:
 * - toggle.scss
 * - 토글 애니메이션, 색상, 크기 스타일 정의 포함
 * ======================================================================
 */

export function createToggle({
  /* -----------------------------------------------------
     ⚙️ 옵션 설정
     -----------------------------------------------------
     - 각 옵션은 기본값을 포함하며, 개별적으로 override 가능
     ----------------------------------------------------- */
  id, // 토글 고유 ID (없으면 자동 생성)
  size = "medium", // 크기 옵션 ("large" | "medium" | "small")
  variant = "standard", // 스타일 변형 (현재 standard만 지원)
  label = "", // 라벨 텍스트 (없으면 라벨 미출력)
  disabled = false, // 비활성화 여부
  checked = false, // 기본 체크 상태 (ON)
}) {
  /* =========================================================
     🆔 ID 생성
     ---------------------------------------------------------
     - 명시적 id 없을 경우, 랜덤 문자열로 유니크 ID 생성
     ========================================================= */
  const toggleId = id || `tgl-${Math.random().toString(36).substr(2, 9)}`;

  /* =========================================================
     🧱 HTML 구조 생성
     ---------------------------------------------------------
     - 라벨 전체를 감싸는 label 요소로 구성
     - 내부 요소:
       1️⃣ input[type="checkbox"]
       2️⃣ switch 역할의 span
       3️⃣ label 텍스트 (선택적)
     ========================================================= */
  const html = `
    <label class="toggle__wrapper toggle--${variant} toggle--${size}">
      <input
        type="checkbox"
        id="${toggleId}"
        class="toggle__input"
        ${disabled ? "disabled" : ""}
        ${checked ? "checked" : ""}
      />
      <span class="toggle__switch"></span>
      ${label ? `<span class="toggle__label">${label}</span>` : ""}
    </label>
  `;

  /* =========================================================
     🏁 반환
     ---------------------------------------------------------
     - 공백 제거(trim) 후 HTML 문자열 반환
     - innerHTML 또는 insertAdjacentHTML 등으로 삽입 가능
     ========================================================= */
  return html.trim();
}
